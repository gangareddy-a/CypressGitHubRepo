{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2019-11-19T07:07:15.560Z",
    "end": "2019-11-19T07:09:56.128Z",
    "duration": 160568,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a64e827c-fd9e-4776-a974-088fd1be6e85",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3088b40c-d2f5-4892-a35e-d4b94ca9ca9e",
          "title": "My First Testsuite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reports",
              "fullTitle": "My First Testsuite Reports",
              "timedOut": null,
              "duration": 155985,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _this = this;\nvar login = new _LoginPage.default();\nvar report = new _ReportPage.default(); // cy.visit(this.data.urladmin)\n//cy.log('url from global env')\ncy.visit(Cypress.env('adminurl'));\nlogin.getUserName().type(this.data.Username);\nlogin.getPass().type(this.data.Pass);\nlogin.getSubmit().click();\nreport.getReportMenu().click();\nreport.getCreate().click({\n  multiple: true,\n  force: true\n});\ncy.wait(4000); // Cypress.config('defaultCommandTimeout','5000')\nreport.getSearchEnter().type(this.data.SearchValue);\nreport.getReportNameClick().each(function ($e1, index, $list) {\n  if ($e1.text() === _this.data.ReportName) {\n    $e1.click();\n  }\n});\nreport.getDate().type(this.data.Datevalue);\nlogin.getSubmit().click({\n  force: true\n});\nreport.getAlert().should('have.text', this.data.SuccessMSG);\n/*cy.get('.alert > div > .ng-binding').then(function($message){\n \n    const val=$message.text()\n    cy.log(val)\n}) */\n/*  cy.on(\"window:alert\",(strg) =>\n {\n     //Mocha\n     expect(strg).to.equal(\"The number of opened tabs exceeds maximum limits Please... Close some of the tabs visited\")\n }) */\n//ITTERATION IN JAVA SCRIPT\n/*\narray.Foreach(function(element){\n   cy.selectProduct(element)\n})\n//Cypress customisze Data\n  this.data.ProdcuctName.Foreach(function(element){\n   cy.selectProduct(element)\n})\n*/",
              "err": {},
              "uuid": "38a157b0-2c53-4188-851c-ca54c4d88fc0",
              "parentUUID": "3088b40c-d2f5-4892-a35e-d4b94ca9ca9e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38a157b0-2c53-4188-851c-ca54c4d88fc0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 155985,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {},
      "version": "4.0.1"
    }
  }
}